SELECT BOOKNAME, PRICE FROM BOOK;

SELECT PRICE, BOOKNAME FROM BOOK;

SELECT BOOKID, BOOKNAME, PUBLISHER, PRICE FROM BOOK;

SELECT * FROM BOOK;

SELECT PUBLISHER FROM BOOK;

SELECT distinct PUBLISHER FROM BOOK;

SELECT * FROM BOOK WHERE PRICE < 20000;

SELECT * FROM BOOK WHERE PRICE Between 10000 and 20000;

SELECT * FROM BOOK WHERE PRICE >= 10000 and PRICE <= 20000;

SELECT * FROM BOOK WHERE PUBLISHER NOT IN('굿스포츠', '대한미디어');

SELECT BOOKNAME, PUBLISHER FROM BOOK WHERE BOOKNAME LIKE '축구의 역사';

SELECT BOOKNAME, PUBLISHER FROM BOOK WHERE BOOKNAME LIKE '%축구%';

SELECT * FROM BOOK WHERE BOOKNAME LIKE '_구%';

SELECT * FROM BOOK WHERE BOOKNAME LIKE '%축구%' AND PRICE >= 20000;

SELECT * FROM BOOK WHERE PUBLISHER='굿스포츠' OR PUBLISHER='대한미디어';

SELECT * FROM BOOK order by BOOKNAME;

SELECT * FROM BOOK order by PRICE, BOOKNAME;

SELECT * FROM BOOK order by PRICE DESC, PUBLISHER ASC;

SELECT SUM(SALEPRICE) FROM ORDERS;

SELECT SUM(SALEPRICE) AS 총매출 FROM ORDERS;

SELECT SUM(SALEPRICE) AS 총매출 FROM ORDERS WHERE custid=2;

SELECT 
       SUM(SALEPRICE) AS TOTAL, 
       AVG(SALEPRICE) AS AVERAGE, 
       MIN(SALEPRICE) AS MINIMUM, 
       MAX(SALEPRICE) AS MAXIMUM
FROM ORDERS;

SELECT COUNT(*) from ORDERS;

SELECT 
     CUSTID,
     COUNT(*) AS 도서수량, 
     SUM(SALEPRICE) AS 총액 
FROM ORDERS 
GROUP BY CUSTID;

SELECT 
     CUSTID,
     COUNT(*) AS 도서수량 
FROM ORDERS 
WHERE SALEPRICE >= 8000 
GROUP BY CUSTID HAVING COUNT(*) >= 2;

/*1-(1)*/
SELECT BOOKNAME FROM BOOK WHERE BOOKID=1;

/*1-(2)*/
SELECT BOOKNAME FROM BOOK WHERE PRICE >= 20000;
/*1-(3)*/
/*서브쿼리 사용*/
SELECT SUM(SALEPRICE) AS TOTAL FROM ORDERS
WHERE
     CUSTID = (SELECT CUSTID 
               FROM CUSTOMER 
               WHERE NAME LIKE '박지성');  
/*JOIN 사용*/
SELECT SUM(ORDERS.SALEPRICE) AS TOTAL 
FROM ORDERS 
INNER JOIN CUSTOMER 
ON ORDERS.CUSTID = CUSTOMER.CUSTID
WHERE CUSTOMER.NAME LIKE '박지성';

/*1-(4)*/
SELECT COUNT(*) AS TOTAL FROM ORDERS
WHERE
     CUSTID = (SELECT CUSTID 
               FROM CUSTOMER 
               WHERE NAME LIKE '박지성');
/*2-(1)*/
SELECT COUNT(BOOKNAME) FROM BOOK;
/*2-(2)*/
SELECT COUNT(DISTINCT PUBLISHER) AS 출판사총개수 FROM BOOK;
/*2-(3)*/
SELECT NAME,ADDRESS FROM CUSTOMER;
/*2-(4)*/
SELECT ORDERID 
FROM ORDERS 
WHERE ORDERDATE 
BETWEEN '14/7/4' AND '14/7/7';
/*2-(5)*/
SELECT ORDERID 
FROM ORDERS 
WHERE ORDERDATE 
NOT BETWEEN '14/7/4' AND '14/7/7';
/*2-(6)*/
SELECT NAME,ADDRESS FROM CUSTOMER WHERE NAME LIKE '김%';
/*2-(7)*/
SELECT NAME,ADDRESS FROM CUSTOMER WHERE NAME LIKE '김%아' ;





/*3-21,22*/
SELECT *
FROM CUSTOMER,ORDERS
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID
ORDER BY CUSTOMER.CUSTID;

/*3-23,24*/
SELECT CUSTOMER.NAME, SUM(ORDERS.SALEPRICE)
FROM CUSTOMER,ORDERS
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID
GROUP BY CUSTOMER.NAME
ORDER BY CUSTOMER.NAME;

/*3-25*/
SELECT CUSTOMER.NAME,BOOK.BOOKNAME 
FROM CUSTOMER,ORDERS,BOOK
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID
      AND ORDERS.BOOKID = BOOK.BOOKID;

/*3-26*/
SELECT CUSTOMER.NAME, BOOK.BOOKNAME
FROM CUSTOMER,ORDERS,BOOK
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID
      AND ORDERS.BOOKID = BOOK.BOOKID
      AND BOOK.PRICE = 20000;

/*3-27*/
SELECT CUSTOMER.NAME,SALEPRICE
FROM CUSTOMER 
LEFT OUTER JOIN ORDERS 
ON CUSTOMER.CUSTID = ORDERS.CUSTID;  

/*3-28*/
SELECT BOOKNAME
FROM BOOK
WHERE PRICE = (SELECT MAX(PRICE) FROM BOOK);

/*3-29*/
SELECT NAME
FROM CUSTOMER
WHERE CUSTID IN(SELECT CUSTID FROM ORDERS);

/*3-30*/
SELECT NAME 
FROM CUSTOMER
WHERE CUSTID IN (SELECT CUSTID
                  FROM ORDERS
                  WHERE BOOKID IN(SELECT BOOKID
                                  FROM BOOK 
                                  WHERE PUBLISHER = '대한미디어'));

/*3-31*/
SELECT B1.BOOKNAME
FROM BOOK B1
WHERE B1.PRICE >(SELECT AVG(B2.PRICE)
                 FROM BOOK B2 
                 WHERE B2.PUBLISHER = B1.PUBLISHER); 

/*3-32*/
SELECT NAME
FROM CUSTOMER
MINUS
SELECT NAME
FROM CUSTOMER
WHERE CUSTID IN(SELECT CUSTID FROM ORDERS);

/*3-33*/
SELECT NAME,ADDRESS
FROM CUSTOMER CS
WHERE EXISTS(SELECT *    
            FROM ORDERS OD 
            WHERE CS.CUSTID = OD.CUSTID);
            
/* 3-33 IS NOT NULL*/        
SELECT CUS.NAME,CUS.ADDRESS
FROM CUSTOMER CUS, ORDERS ORD
WHERE CUS.CUSTID = ORD.CUSTID
      AND ORD.ORDERID IS NOT NULL
GROUP BY CUS.NAME,CUS.ADDRESS;

/* 3-33 RIGHT OUTER JOIN*/ 
SELECT CUS.NAME,CUS.ADDRESS
FROM CUSTOMER CUS
RIGHT OUTER JOIN ORDERS ORD
ON CUS.CUSTID = ORD.CUSTID
GROUP BY CUS.NAME,CUS.ADDRESS;


/*예제 1-5*/
SELECT COUNT(DISTINCT B.PUBLISHER)AS TOTAL
FROM BOOK B
WHERE B.BOOKID IN (SELECT ORD.BOOKID 
                   FROM CUSTOMER CUS,ORDERS ORD
                   WHERE CUS.CUSTID = ORD.CUSTID
                         AND CUS.NAME LIKE '박지성%');
                         
SELECT COUNT(B.PUBLISHER)
FROM ORDERS ORD 
JOIN CUSTOMER CUS   
ON CUS.CUSTID = ORD.CUSTID
JOIN BOOK B
ON B.BOOKID = ORD.BOOKID
WHERE CUS.NAME LIKE '박지성';

/*예제 1-6*/                        
SELECT B.BOOKNAME, B.PRICE,  ORD.SALEPRICE,(B.PRICE - ORD.SALEPRICE) AS PRICE
FROM BOOK B 
LEFT JOIN ORDERS ORD ON B.BOOKID = ORD.BOOKID
WHERE ORD.CUSTID = (SELECT DISTINCT ORD.CUSTID 
                    FROM CUSTOMER CUS,ORDERS ORD
                    WHERE CUS.CUSTID = ORD.CUSTID
                         AND CUS.NAME LIKE '박지성%');
                         
/*1-7*/
--------1) NOT IN --------
SELECT B.BOOKNAME
FROM BOOK B
WHERE B.BOOKID NOT IN(
SELECT ORD.BOOKID
FROM CUSTOMER CUS,ORDERS ORD
WHERE CUS.CUSTID = ORD.CUSTID
      AND CUS.NAME LIKE '박지성');

-------------MINUS---------
SELECT B.BOOKNAME
FROM BOOK B
MINUS 
SELECT B.BOOKNAME
FROM 
ORDERS ORD
JOIN CUSTOMER CUS 
ON CUS.CUSTID = ORD.CUSTID
JOIN BOOK B
ON ORD.BOOKID = B.BOOKID
WHERE CUS.NAME LIKE '박지성';
-------------NOT EXISTS---------
SELECT B.BOOKNAME
FROM BOOK B
WHERE NOT EXISTS(SELECT * 
                 FROM 
                 ORDERS ORD
                 LEFT JOIN CUSTOMER CUS 
                 ON CUS.CUSTID = ORD.CUSTID
                 WHERE ORD.BOOKID = B.BOOKID
                 AND CUS.NAME LIKE '박지성');

/*2-8*/
SELECT CUS.NAME
FROM CUSTOMER CUS
LEFT OUTER JOIN ORDERS ORD
ON CUS.CUSTID = ORD.CUSTID
WHERE
ORD.ORDERID IS NULL;


SELECT NAME FROM CUSTOMER
MINUS
SELECT CUS.NAME
FROM CUSTOMER CUS
RIGHT JOIN ORDERS ORD
ON CUS.CUSTID = ORD.CUSTID;



/*2-9*/
SELECT SUM(SALEPRICE) AS TOTAL, 
       AVG(SALEPRICE) AS AVERAGE
FROM ORDERS;

/*2-10*/
----------------------------------------
/*그룹바이 */
SELECT CUS.NAME, SUM(ORD.SALEPRICE) AS PRICE 
FROM CUSTOMER CUS 
LEFT JOIN ORDERS ORD
ON CUS.CUSTID = ORD.CUSTID
GROUP BY CUS.NAME
ORDER BY CUS.NAME;
/*서브쿼리 */
SELECT   CUS.NAME,
        (SELECT SUM(SALEPRICE) 
         FROM ORDERS ORD 
         WHERE CUS.CUSTID = ORD.CUSTID) AS PRICE
FROM CUSTOMER CUS ;
----------------------------------
/*2-11*/
SELECT CUS.NAME,
(SELECT BOOKNAME FROM BOOK WHERE BOOKID = ORD.BOOKID)AS BOOKNAME
FROM CUSTOMER CUS, ORDERS ORD 
WHERE CUS.CUSTID = ORD.CUSTID;

/*2-12*/
SELECT MAX(BOOK.PRICE-ORDERS.SALEPRICE) AS PRICE
FROM BOOK, ORDERS
WHERE BOOK.BOOKID = ORDERS.BOOKID;

/*2-13*/
SELECT TCU.NAME
FROM 
(SELECT AVG(SALEPRICE) AS PRICE FROM ORDERS) TOR,
(SELECT CUS.NAME,
       AVG(ORD.SALEPRICE) AS PRICE
FROM ORDERS ORD,CUSTOMER CUS
WHERE ORD.CUSTID = CUS.CUSTID
GROUP BY CUS.NAME,CUS.CUSTID) TCU
WHERE TOR.PRICE < TCU.PRICE;

